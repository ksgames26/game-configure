"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScalarTypeValue = void 0;
var ScalarTypeValue;
(function (ScalarTypeValue) {
    ScalarTypeValue[ScalarTypeValue["DOUBLE"] = 1] = "DOUBLE";
    ScalarTypeValue[ScalarTypeValue["FLOAT"] = 2] = "FLOAT";
    ScalarTypeValue[ScalarTypeValue["INT64"] = 3] = "INT64";
    ScalarTypeValue[ScalarTypeValue["UINT64"] = 4] = "UINT64";
    ScalarTypeValue[ScalarTypeValue["INT32"] = 5] = "INT32";
    ScalarTypeValue[ScalarTypeValue["FIXED64"] = 6] = "FIXED64";
    ScalarTypeValue[ScalarTypeValue["FIXED32"] = 7] = "FIXED32";
    ScalarTypeValue[ScalarTypeValue["BOOL"] = 8] = "BOOL";
    ScalarTypeValue[ScalarTypeValue["STRING"] = 9] = "STRING";
    ScalarTypeValue[ScalarTypeValue["BYTES"] = 12] = "BYTES";
    ScalarTypeValue[ScalarTypeValue["UINT32"] = 13] = "UINT32";
    ScalarTypeValue[ScalarTypeValue["SFIXED32"] = 15] = "SFIXED32";
    ScalarTypeValue[ScalarTypeValue["SFIXED64"] = 16] = "SFIXED64";
    ScalarTypeValue[ScalarTypeValue["SINT32"] = 17] = "SINT32";
    ScalarTypeValue[ScalarTypeValue["SINT64"] = 18] = "SINT64";
})(ScalarTypeValue || (exports.ScalarTypeValue = ScalarTypeValue = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29yay1ib29rLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc291cmNlL2NvbXBpbGVyL3dvcmstYm9vay50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUEwRkEsSUFBWSxlQWdCWDtBQWhCRCxXQUFZLGVBQWU7SUFDdkIseURBQVUsQ0FBQTtJQUNWLHVEQUFTLENBQUE7SUFDVCx1REFBUyxDQUFBO0lBQ1QseURBQVUsQ0FBQTtJQUNWLHVEQUFTLENBQUE7SUFDVCwyREFBVyxDQUFBO0lBQ1gsMkRBQVcsQ0FBQTtJQUNYLHFEQUFRLENBQUE7SUFDUix5REFBVSxDQUFBO0lBQ1Ysd0RBQVUsQ0FBQTtJQUNWLDBEQUFXLENBQUE7SUFDWCw4REFBYSxDQUFBO0lBQ2IsOERBQWEsQ0FBQTtJQUNiLDBEQUFXLENBQUE7SUFDWCwwREFBVyxDQUFBO0FBQ2YsQ0FBQyxFQWhCVyxlQUFlLCtCQUFmLGVBQWUsUUFnQjFCIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgaW50ZXJmYWNlIElTb3VyY2VUeXBlIHtcbiAgICAvKipcbiAgICAgKiDmnaHku7bnsbvlnotcbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICogQG1lbWJlcm9mIElTb3VyY2VUeXBlXG4gICAgICovXG4gICAgY29uZGl0aW9uOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDlhazlvI/nsbvlnotcbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICogQG1lbWJlcm9mIElTb3VyY2VUeXBlXG4gICAgICovXG4gICAgZm9ybXVsYTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICog5Ye95pWw57G75Z6LXG4gICAgICpcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqIEBtZW1iZXJvZiBJU291cmNlVHlwZVxuICAgICAqL1xuICAgIGZuOiBzdHJpbmc7XG5cbiAgICAvKipcbiAgICAgKiDpmZDliLbnsbvlnotcbiAgICAgKlxuICAgICAqIEB0eXBlIHtzdHJpbmd9XG4gICAgICogQG1lbWJlcm9mIElTb3VyY2VUeXBlXG4gICAgICovXG4gICAgbGltaXQ6IHN0cmluZztcbn1cblxuLy8gQHNlZSBodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9wcm90b2NvbC1idWZmZXJzL2RvY3MvcHJvdG8zI3NjYWxhclxuZXhwb3J0IGludGVyZmFjZSBQcm90b0J1ZlNjYWxhciBleHRlbmRzIElTb3VyY2VUeXBlIHtcbiAgICBkb3VibGU6IHN0cmluZztcbiAgICBmbG9hdDogc3RyaW5nO1xuICAgIGludDMyOiBzdHJpbmc7XG4gICAgaW50NjQ6IHN0cmluZztcbiAgICB1aW50MzI6IHN0cmluZztcbiAgICB1aW50NjQ6IHN0cmluZztcbiAgICBzaW50MzI6IHN0cmluZztcbiAgICBzaW50NjQ6IHN0cmluZztcbiAgICBmaXhlZDMyOiBzdHJpbmc7XG4gICAgZml4ZWQ2NDogc3RyaW5nO1xuICAgIHNmaXhlZDMyOiBzdHJpbmc7XG4gICAgc2ZpeGVkNjQ6IHN0cmluZztcbiAgICBib29sOiBzdHJpbmc7XG4gICAgc3RyaW5nOiBzdHJpbmc7XG4gICAgYnl0ZXM6IHN0cmluZztcbn1cblxuZXhwb3J0IHR5cGUgUHJvdG9CdWZTY2FsYXJUeXBlID0ga2V5b2YgUHJvdG9CdWZTY2FsYXI7XG5cbi8qKlxuICogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L1R5cGVTY3JpcHQvYmxvYi9tYXN0ZXIvc3JjL2NvbXBpbGVyL3NjYW5uZXIudHMjTDE2MVxuICpcbiAqIEBlbnVtIHtudW1iZXJ9XG4gKi9cbmV4cG9ydCBjb25zdCBlbnVtIEtleVdvcmRzIHtcbiAgICBTdXBlciA9IFwic3VwZXJcIixcbiAgICBEZWNsYXJlID0gXCJkZWNsYXJlXCIsXG4gICAgR2xvYmFsID0gXCJnbG9iYWxcIixcbiAgICBPYmplY3QgPSBcIm9iamVjdFwiLFxuICAgIFNwYWNlID0gXCIgXCIsXG4gICAgRW51bSA9IFwiZW51bVwiLFxuICAgIEludGVyZmFjZSA9IFwiaW50ZXJmYWNlXCIsXG4gICAgUmVnaXN0ZXIgPSBcInJlZ2lzdGVyXCIsXG4gICAgU2NhbGFyVHlwZSA9IFwiU2NhbGFyVHlwZVwiLFxuICAgIFBBQ0tFUl9MSVNUID0gXCJQQUNLRVIoTElTVClcIixcbiAgICBQQUNLRVJfTUFQID0gXCJQQUNLRVIoTUFQKVwiLFxuICAgIFBBQ0tFUl9LViA9IFwiUEFDS0VSKEtWKVwiLFxuICAgIFBBQ0tFUl9FTlVNID0gXCJQQUNLRVIoRU5VTSlcIixcbiAgICBJRE9CSiA9IFwiSURPQkpcIixcbiAgICBJREtFWSA9IFwiSURLRVlcIixcbiAgICBJRFZBTFVFID0gXCJJRFZBTFVFXCIsXG4gICAgSURUWVBFID0gXCJJRFRZUEVcIixcbiAgICBOQU1FID0gXCJuYW1lXCIsXG4gICAgT3BlbkJyYWNlVG9rZW4gPSBcIntcIixcbiAgICBDbG9zZUJyYWNlVG9rZW4gPSBcIn1cIixcbiAgICBPcGVuUGFyZW5Ub2tlbiA9IFwiKFwiLFxuICAgIENsb3NlUGFyZW5Ub2tlbiA9IFwiKVwiLFxuICAgIE9wZW5CcmFja2V0VG9rZW4gPSBcIltcIixcbiAgICBDbG9zZUJyYWNrZXRUb2tlbiA9IFwiXVwiLFxuICAgIENvbW1hVG9rZW4gPSBcIixcIixcbiAgICBTZW1pY29sb25Ub2tlbiA9IFwiO1wiLFxufVxuXG5leHBvcnQgZW51bSBTY2FsYXJUeXBlVmFsdWUge1xuICAgIERPVUJMRSA9IDEsXG4gICAgRkxPQVQgPSAyLFxuICAgIElOVDY0ID0gMyxcbiAgICBVSU5UNjQgPSA0LFxuICAgIElOVDMyID0gNSxcbiAgICBGSVhFRDY0ID0gNixcbiAgICBGSVhFRDMyID0gNyxcbiAgICBCT09MID0gOCxcbiAgICBTVFJJTkcgPSA5LFxuICAgIEJZVEVTID0gMTIsXG4gICAgVUlOVDMyID0gMTMsXG4gICAgU0ZJWEVEMzIgPSAxNSxcbiAgICBTRklYRUQ2NCA9IDE2LFxuICAgIFNJTlQzMiA9IDE3LFxuICAgIFNJTlQ2NCA9IDE4LFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBRSW5wdXQge1xuICAgIHNvdXJjZToge1xuICAgICAgICBpbmR4OiBudW1iZXI7XG4gICAgICAgIG5hbWU6IHN0cmluZztcbiAgICAgICAgdHlwZTogUHJvdG9CdWZTY2FsYXJUeXBlO1xuICAgIH07XG4gICAgaWR4OiBudW1iZXI7XG4gICAgdmFsdWVzOiB7XG4gICAgICAgIFtrZXk6IG51bWJlcl06IHtcbiAgICAgICAgICAgIHRleHQ6IHN0cmluZyB8IG51bWJlciB8IHVuZGVmaW5lZDtcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIGRhdGE6IHsgW2tleTogc3RyaW5nXTogYW55IH07XG4gICAgdHlwZTogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFBRV29ya0Jvb2sge1xuICAgIC8qKlxuICAgICAqIFdvcmtTaGVldCBuYW1lXG4gICAgICpcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxuICAgICAqIEBtZW1iZXJvZiBQUVdvcmtCb29rXG4gICAgICovXG4gICAgbmFtZTogc3RyaW5nO1xuXG4gICAgLyoqXG4gICAgICog5YaF5a65XG4gICAgICpcbiAgICAgKiBAdHlwZSB7KHtcbiAgICAgKiAgICAgICAgIC8vIDAg6KGo56S66KGo5YaF5a656Kej6YeKXG4gICAgICogICAgICAgICAwOiB7IGNlbGxzOiB7IDA6IHsgdGV4dDogc3RyaW5nIH0gfSB9LFxuICAgICAqICAgICAgICAgLy9cbiAgICAgKiAgICAgICAgIDE6IHtcbiAgICAgKiAgICAgICAgICAgICBjZWxsczoge1xuICAgICAqICAgICAgICAgICAgICAgICAwOiB7IHRleHQ6IFwi5Y+Y6YeP6KGo5aS0XCIgfSxcbiAgICAgKiAgICAgICAgICAgICAgICAgW2tleTogbnVtYmVyXTogeyB0ZXh0OiBzdHJpbmcgfCBudW1iZXIgfVxuICAgICAqICAgICAgICAgICAgIH1cbiAgICAgKiAgICAgICAgIH0sXG4gICAgICogICAgICAgICAyOiB7XG4gICAgICogICAgICAgICAgICAgY2VsbHM6IHtcbiAgICAgKiAgICAgICAgICAgICAgICAgMDogeyB0ZXh0OiBcIumdnuepuuagh+ivhlwiIH0sXG4gICAgICogICAgICAgICAgICAgICAgIFtrZXk6IG51bWJlcl06IHsgdGV4dDogc3RyaW5nIHwgbnVtYmVyIH1cbiAgICAgKiAgICAgICAgICAgICB9XG4gICAgICogICAgICAgICB9LFxuICAgICAqICAgICAgICAgMzoge1xuICAgICAqICAgICAgICAgICAgIGNlbGxzOiB7XG4gICAgICogICAgICAgICAgICAgICAgIDA6IHsgdGV4dDogXCLlj5jph4/lkI3np7BcIiB9LFxuICAgICAqICAgICAgICAgICAgICAgICBba2V5OiBudW1iZXJdOiB7IHRleHQ6IHN0cmluZyB8IG51bWJlciB9XG4gICAgICogICAgICAgICAgICAgfVxuICAgICAqICAgICAgICAgfSxcbiAgICAgKiAgICAgICAgIDQ6IHtcbiAgICAgKiAgICAgICAgICAgICBjZWxsczoge1xuICAgICAqICAgICAgICAgICAgICAgICAwOiB7IHRleHQ6IFwi5Y+Y6YeP57G75Z6LXCIgfSxcbiAgICAgKiAgICAgICAgICAgICAgICAgW2tleTogbnVtYmVyXTogeyB0ZXh0OiBrIHwgXCLlj5jph4/nsbvlnotcIiB9XG4gICAgICogICAgICAgICAgICAgfVxuICAgICAqICAgICAgICAgfVxuICAgICAqICAgICAgICAgW2tleTogbnVtYmVyXToge1xuICAgICAqICAgICAgICAgICAgIGNlbGxzOiB7XG4gICAgICogICAgICAgICAgICAgICAgIFtrZXk6IG51bWJlcl06IHsgdGV4dDogc3RyaW5nIHwgbnVtYmVyIH1cbiAgICAgKiAgICAgICAgICAgICB9XG4gICAgICogICAgICAgICB9XG4gICAgICogICAgIH0pfVxuICAgICAqIEBtZW1iZXJvZiBQUVdvcmtCb29rXG4gICAgICovXG4gICAgcm93czoge1xuICAgICAgICAvLyAwIOihqOekuuihqOWGheWuueino+mHilxuICAgICAgICAvLyAxIOihqOekuuihqOeahElEKOeUqOadpeaJk+WMheino+WMhSlcbiAgICAgICAgMDogeyBjZWxsczogeyAwOiB7IHRleHQ6IHN0cmluZyB9OyAxOiB7IHRleHQ6IG51bWJlciB9OyAyOiB7IHRleHQ6IG51bWJlciB9IH0gfTtcbiAgICAgICAgLy9cbiAgICAgICAgMToge1xuICAgICAgICAgICAgY2VsbHM6IHtcbiAgICAgICAgICAgICAgICAwOiB7IHRleHQ6IFwi5Y+Y6YeP6KGo5aS0XCIgfTtcbiAgICAgICAgICAgICAgICBba2V5OiBudW1iZXJdOiB7IHRleHQ6IHN0cmluZyB8IG51bWJlciB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgMjoge1xuICAgICAgICAgICAgY2VsbHM6IHtcbiAgICAgICAgICAgICAgICAwOiB7IHRleHQ6IFwi6Z2e56m65qCH6K+GXCIgfTtcbiAgICAgICAgICAgICAgICBba2V5OiBudW1iZXJdOiB7IHRleHQ6IHN0cmluZyB8IG51bWJlciB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgMzoge1xuICAgICAgICAgICAgY2VsbHM6IHtcbiAgICAgICAgICAgICAgICAwOiB7IHRleHQ6IFwi5Y+Y6YeP5ZCN56ewXCIgfTtcbiAgICAgICAgICAgICAgICBba2V5OiBudW1iZXJdOiB7IHRleHQ6IHN0cmluZyB8IG51bWJlciB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgNDoge1xuICAgICAgICAgICAgY2VsbHM6IHtcbiAgICAgICAgICAgICAgICAwOiB7IHRleHQ6IFwi5Y+Y6YeP57G75Z6LXCIgfTtcbiAgICAgICAgICAgICAgICBba2V5OiBudW1iZXJdOiB7IHRleHQ6IFByb3RvQnVmU2NhbGFyVHlwZSB8IFwi5Y+Y6YeP57G75Z6LXCIgfTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH07XG4gICAgICAgIDU6IHtcbiAgICAgICAgICAgIGNlbGxzOiB7XG4gICAgICAgICAgICAgICAgW2tleTogbnVtYmVyXToge1xuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBgJHtLZXlXb3Jkcy5QQUNLRVJfTElTVH1gIHwgYCR7S2V5V29yZHMuSURLRVl9YCB8IGAke0tleVdvcmRzLklEVkFMVUV9YCB8IHN0cmluZztcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICAgICAgW2tleTogbnVtYmVyXToge1xuICAgICAgICAgICAgY2VsbHM6IHtcbiAgICAgICAgICAgICAgICBba2V5OiBudW1iZXJdOiB7IHRleHQ6IHN0cmluZyB8IG51bWJlciB9O1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgdHlwZXM6IHtcbiAgICAgICAgaW5keDogbnVtYmVyO1xuICAgICAgICBuYW1lOiBzdHJpbmc7XG4gICAgICAgIHR5cGU6IHN0cmluZztcbiAgICB9W107XG59XG4iXX0=